# implements tab completion for complete (bash), compsys (new zsh) and compctl (old zsh)
# this file is generated by `rake completion`

_travis_complete() {
  case $1 in
  1) _travis_commands;;
  2)
    case "$2" in
      # commands with smart completions (in addition to command line flags)
      help)  _travis_commands;;
      setup) _travis_setup;;
      init)  _travis_init;;
      *)     _travis_option;;
    esac;;
  *) _travis_option;;
  esac
}

if type compdef 1>/dev/null 2>/dev/null; then
  compdef _travis travis
  _travis()          { _travis_complete $((${#words} - 1)) "${words[2]}"; }
  _travis_commands() { list=(accounts:"displays accounts and their subscription status" branches:"displays the most recent build for each branch" cancel:"cancels a job or build" console:"interactive shell" disable:"disables a project" enable:"enables a project" encrypt:"encrypts values for the .travis.yml" endpoint:"displays or changes the API endpoint" help:"helps you out when in dire need of information" history:"displays a projects build history" init:"generates a .travis.yml and enables the project" login:"authenticates against the API and stores the token" logs:"streams test logs" monitor:"live monitor for what's going on" open:"opens a build or job in the browser" pubkey:"prints out a repository's public key" raw:"makes an (authenticated) API call and prints out the result" restart:"restarts a build or job" setup:"sets up an addon or deploy target" show:"displays a build or job" status:"checks status of the latest build" sync:"triggers a new sync with GitHub" token:"outputs the secret API token" version:"outputs the client version" whatsup:"lists most recent builds" whoami:"outputs the current user") _describe -t common-commands 'common commands' list; }
  _travis_setup()    { list=(cloudcontrol:"automatic deployment to cloudControl" cloudfoundry:"automatic deployment to Cloud Foundry" engineyard:"automatic deployment to Engine Yard" heroku:"automatic deployment to Heroku" nodejitsu:"automatic deployment to Nodejitsu" openshift:"automatic deployment to OpenShfit" rubygems:"automatic release to RubyGems" sauce_connect:"Sauce Connet addon for Sauce Labs integration") _describe -t common-commands 'common commands' list; }
  _travis_init()     { list=(c:'initialize c project' clojure:'initialize clojure project' cpp:'initialize cpp project' erlang:'initialize erlang project' go:'initialize go project' groovy:'initialize groovy project' haskell:'initialize haskell project' java:'initialize java project' node_js:'initialize node_js project' objective-c:'initialize objective-c project' perl:'initialize perl project' php:'initialize php project' python:'initialize python project' ruby:'initialize ruby project' scala:'initialize scala project') _describe -t common-commands 'common commands' list; }
  _travis_option()   {
    case "${words[2]}" in
      accounts)  _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" '*:file:_files' && return 0;;
      branches)  _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" "-r[repository to use (will try to detect from current git clone)]" "--repo[repository to use (will try to detect from current git clone)]" '*:file:_files' && return 0;;
      cancel)    _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" "-r[repository to use (will try to detect from current git clone)]" "--repo[repository to use (will try to detect from current git clone)]" '*:file:_files' && return 0;;
      console)   _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" '*:file:_files' && return 0;;
      disable)   _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" "-r[repository to use (will try to detect from current git clone)]" "--repo[repository to use (will try to detect from current git clone)]" '*:file:_files' && return 0;;
      enable)    _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" "-r[repository to use (will try to detect from current git clone)]" "--repo[repository to use (will try to detect from current git clone)]" "-s[don't trigger a sync if the repo is unknown]" "--skip-sync[don't trigger a sync if the repo is unknown]" '*:file:_files' && return 0;;
      encrypt)   _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" "-r[repository to use (will try to detect from current git clone)]" "--repo[repository to use (will try to detect from current git clone)]" "-a[adds it to .travis.yml under KEY (default: env.global)]" "--add[adds it to .travis.yml under KEY (default: env.global)]" "-s[treat each line as a separate input]" "--split[treat each line as a separate input]" "--no-split[treat each line as a separate input]" "-p[don't override existing values, instead treat as list]" "--append[don't override existing values, instead treat as list]" "-x[override existing value]" "--override[override existing value]" '*:file:_files' && return 0;;
      endpoint)  _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" "--drop-default[delete stored default endpoint]" "--set-default[store endpoint as global default]" "--github[display github endpoint]" '*:file:_files' && return 0;;
      help)      _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" '*:file:_files' && return 0;;
      history)   _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" "-r[repository to use (will try to detect from current git clone)]" "--repo[repository to use (will try to detect from current git clone)]" "-a[Only show history after a given build number]" "--after[Only show history after a given build number]" "-p[Only show history for the given Pull Request]" "--pull-request[Only show history for the given Pull Request]" "-b[Only show history for the given branch]" "--branch[Only show history for the given branch]" "-l[Maximum number of history items]" "--limit[Maximum number of history items]" "--all[Display all history items]" "--no-all[Display all history items]" '*:file:_files' && return 0;;
      init)      _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" "-r[repository to use (will try to detect from current git clone)]" "--repo[repository to use (will try to detect from current git clone)]" "-s[don't trigger a sync if the repo is unknown]" "--skip-sync[don't trigger a sync if the repo is unknown]" "-f[override .travis.yml if it already exists]" "--force[override .travis.yml if it already exists]" "-k[do not enable project, only add .travis.yml]" "--skip-enable[do not enable project, only add .travis.yml]" "-p[print generated config instead of writing to file]" "--print-conf[print generated config instead of writing to file]" "--script[sets script option in .travis.yml (can be used more than once)]" "--before-script[sets before_script option in .travis.yml (can be used more than once)]" "--after-script[sets after_script option in .travis.yml (can be used more than once)]" "--after-success[sets after_success option in .travis.yml (can be used more than once)]" "--install[sets install option in .travis.yml (can be used more than once)]" "--before-install[sets before_install option in .travis.yml (can be used more than once)]" "--compiler[sets compiler option in .travis.yml (can be used more than once)]" "--otp-release[sets otp_release option in .travis.yml (can be used more than once)]" "--go[sets go option in .travis.yml (can be used more than once)]" "--jdk[sets jdk option in .travis.yml (can be used more than once)]" "--node-js[sets node_js option in .travis.yml (can be used more than once)]" "--perl[sets perl option in .travis.yml (can be used more than once)]" "--php[sets php option in .travis.yml (can be used more than once)]" "--python[sets python option in .travis.yml (can be used more than once)]" "--rvm[sets rvm option in .travis.yml (can be used more than once)]" "--scala[sets scala option in .travis.yml (can be used more than once)]" "--env[sets env option in .travis.yml (can be used more than once)]" "--gemfile[sets gemfile option in .travis.yml (can be used more than once)]" '*:file:_files' && return 0;;
      login)     _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" "--github-token[identify by GitHub token]" "--auto[try to figure out who you are automatically (might send another apps token to Travis, token will not be stored)]" "--github-endpoint[force override GitHub API endpoint]" '*:file:_files' && return 0;;
      logs)      _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" "-r[repository to use (will try to detect from current git clone)]" "--repo[repository to use (will try to detect from current git clone)]" '*:file:_files' && return 0;;
      monitor)   _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" "-m[Only monitor my own repositories]" "--my-repos[Only monitor my own repositories]" "-r[monitor given repository (can be used more than once)]" "--repo[monitor given repository (can be used more than once)]" '*:file:_files' && return 0;;
      open)      _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" "-r[repository to use (will try to detect from current git clone)]" "--repo[repository to use (will try to detect from current git clone)]" "-g[Open the corresponding project, compare view or pull request on GitHub]" "--github[Open the corresponding project, compare view or pull request on GitHub]" "-p[Print out the URL instead of opening it in a browser]" "--print[Print out the URL instead of opening it in a browser]" '*:file:_files' && return 0;;
      pubkey)    _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" "-r[repository to use (will try to detect from current git clone)]" "--repo[repository to use (will try to detect from current git clone)]" "-p[encode in format used by pem]" "--pem[encode in format used by pem]" "--no-pem[encode in format used by pem]" '*:file:_files' && return 0;;
      raw)       _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" "--json[display as json]" "--no-json[display as json]" '*:file:_files' && return 0;;
      restart)   _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" "-r[repository to use (will try to detect from current git clone)]" "--repo[repository to use (will try to detect from current git clone)]" '*:file:_files' && return 0;;
      setup)     _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" "-r[repository to use (will try to detect from current git clone)]" "--repo[repository to use (will try to detect from current git clone)]" "-f[override config section if it already exists]" "--force[override config section if it already exists]" '*:file:_files' && return 0;;
      show)      _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" "-r[repository to use (will try to detect from current git clone)]" "--repo[repository to use (will try to detect from current git clone)]" '*:file:_files' && return 0;;
      status)    _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" "-r[repository to use (will try to detect from current git clone)]" "--repo[repository to use (will try to detect from current git clone)]" "-x[sets the exit code to 1 if the build failed]" "--exit-code[sets the exit code to 1 if the build failed]" "--no-exit-code[sets the exit code to 1 if the build failed]" "-q[does not print anything]" "--quiet[does not print anything]" "--no-quiet[does not print anything]" "-p[sets the status code to 1 if the build is pending]" "--fail-pending[sets the status code to 1 if the build is pending]" "--no-fail-pending[sets the status code to 1 if the build is pending]" '*:file:_files' && return 0;;
      sync)      _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" "-c[only check the sync status]" "--check[only check the sync status]" "-b[will trigger sync but not block until sync is done]" "--background[will trigger sync but not block until sync is done]" "-f[will force sync, even if one is already running]" "--force[will force sync, even if one is already running]" '*:file:_files' && return 0;;
      token)     _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" '*:file:_files' && return 0;;
      version)   _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" '*:file:_files' && return 0;;
      whatsup)   _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" "-m[Only display my own repositories]" "--my-repos[Only display my own repositories]" '*:file:_files' && return 0;;
      whoami)    _arguments -s -S "-h[Display help]" "--help[Display help]" "-i[be interactive and colorful]" "--interactive[be interactive and colorful]" "--no-interactive[be interactive and colorful]" "-E[don't rescue exceptions]" "--explode[don't rescue exceptions]" "--no-explode[don't rescue exceptions]" "--skip-version-check[don't check if travis client is up to date]" "-e[Travis API server to talk to]" "--api-endpoint[Travis API server to talk to]" "--pro[short-cut for --api-endpoint 'https://api.travis-ci.com/']" "--org[short-cut for --api-endpoint 'https://api.travis-ci.org/']" "--staging[talks to staging system]" "-t[access token to use]" "--token[access token to use]" "--debug[show API requests]" "--adapter[Faraday adapter to use for HTTP requests]" '*:file:_files' && return 0;;
    esac
  }
elif type compctl 1>/dev/null 2>/dev/null; then
  compctl -K _travis travis
  _travis()          { read -cA words && _travis_complete $((${#words} - 1)) "${words[2]}"; }
  _travis_commands() { reply=("accounts" "branches" "cancel" "console" "disable" "enable" "encrypt" "endpoint" "help" "history" "init" "login" "logs" "monitor" "open" "pubkey" "raw" "restart" "setup" "show" "status" "sync" "token" "version" "whatsup" "whoami"); }
  _travis_setup()    { reply=("cloudcontrol" "cloudfoundry" "engineyard" "heroku" "nodejitsu" "openshift" "rubygems" "sauce_connect"); }
  _travis_init()     { reply=("c" "clojure" "cpp" "erlang" "go" "groovy" "haskell" "java" "node_js" "objective-c" "perl" "php" "python" "ruby" "scala"); }
  _travis_option()   {
    case "${words[2]}" in
      accounts)  reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter");;
      branches)  reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter" "--repo" "-r");;
      cancel)    reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter" "--repo" "-r");;
      console)   reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter");;
      disable)   reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter" "--repo" "-r");;
      enable)    reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter" "--repo" "-r" "--skip-sync" "-s");;
      encrypt)   reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter" "--repo" "-r" "--add" "-a" "--split" "--no-split" "-s" "--append" "-p" "--override" "-x");;
      endpoint)  reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter" "--drop-default" "--set-default" "--github");;
      help)      reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check");;
      history)   reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter" "--repo" "-r" "--after" "-a" "--pull-request" "-p" "--branch" "-b" "--limit" "-l" "--all" "--no-all");;
      init)      reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter" "--repo" "-r" "--skip-sync" "-s" "--force" "-f" "--skip-enable" "-k" "--print-conf" "-p" "--script" "--before-script" "--after-script" "--after-success" "--install" "--before-install" "--compiler" "--otp-release" "--go" "--jdk" "--node-js" "--perl" "--php" "--python" "--rvm" "--scala" "--env" "--gemfile");;
      login)     reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter" "--github-token" "--auto" "--github-endpoint");;
      logs)      reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter" "--repo" "-r");;
      monitor)   reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter" "--my-repos" "-m" "--repo" "-r");;
      open)      reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter" "--repo" "-r" "--github" "-g" "--print" "-p");;
      pubkey)    reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter" "--repo" "-r" "--pem" "--no-pem" "-p");;
      raw)       reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter" "--json" "--no-json");;
      restart)   reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter" "--repo" "-r");;
      setup)     reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter" "--repo" "-r" "--force" "-f");;
      show)      reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter" "--repo" "-r");;
      status)    reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter" "--repo" "-r" "--exit-code" "--no-exit-code" "-x" "--quiet" "--no-quiet" "-q" "--fail-pending" "--no-fail-pending" "-p");;
      sync)      reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter" "--check" "-c" "--background" "-b" "--force" "-f");;
      token)     reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter");;
      version)   reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check");;
      whatsup)   reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter" "--my-repos" "-m");;
      whoami)    reply=("--help" "-h" "--interactive" "--no-interactive" "-i" "--explode" "--no-explode" "-E" "--skip-version-check" "--api-endpoint" "-e" "--pro" "--org" "--staging" "--token" "-t" "--debug" "--adapter");;
    esac
  }
elif type complete 1>/dev/null 2>/dev/null; then
  complete -F _travis travis
  _travis()          { _travis_complete "$COMP_CWORD" "${COMP_WORDS[1]}"; }
  _travis_commands() { COMPREPLY=( $(compgen -W "accounts branches cancel console disable enable encrypt endpoint help history init login logs monitor open pubkey raw restart setup show status sync token version whatsup whoami" -- "${COMP_WORDS[COMP_CWORD]}") ); }
  _travis_setup()    { COMPREPLY=( $(compgen -W "cloudcontrol cloudfoundry engineyard heroku nodejitsu openshift rubygems sauce_connect" -- "${COMP_WORDS[COMP_CWORD]}") ); }
  _travis_init()     { COMPREPLY=( $(compgen -W "c clojure cpp erlang go groovy haskell java node_js objective-c perl php python ruby scala" -- "${COMP_WORDS[COMP_CWORD]}") ); }
  _travis_option()   {
    local options
    case "${COMP_WORDS[1]}" in
      accounts)  options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter";;
      branches)  options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter --repo -r";;
      cancel)    options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter --repo -r";;
      console)   options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter";;
      disable)   options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter --repo -r";;
      enable)    options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter --repo -r --skip-sync -s";;
      encrypt)   options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter --repo -r --add -a --split --no-split -s --append -p --override -x";;
      endpoint)  options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter --drop-default --set-default --github";;
      help)      options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check";;
      history)   options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter --repo -r --after -a --pull-request -p --branch -b --limit -l --all --no-all";;
      init)      options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter --repo -r --skip-sync -s --force -f --skip-enable -k --print-conf -p --script --before-script --after-script --after-success --install --before-install --compiler --otp-release --go --jdk --node-js --perl --php --python --rvm --scala --env --gemfile";;
      login)     options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter --github-token --auto --github-endpoint";;
      logs)      options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter --repo -r";;
      monitor)   options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter --my-repos -m --repo -r";;
      open)      options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter --repo -r --github -g --print -p";;
      pubkey)    options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter --repo -r --pem --no-pem -p";;
      raw)       options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter --json --no-json";;
      restart)   options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter --repo -r";;
      setup)     options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter --repo -r --force -f";;
      show)      options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter --repo -r";;
      status)    options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter --repo -r --exit-code --no-exit-code -x --quiet --no-quiet -q --fail-pending --no-fail-pending -p";;
      sync)      options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter --check -c --background -b --force -f";;
      token)     options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter";;
      version)   options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check";;
      whatsup)   options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter --my-repos -m";;
      whoami)    options="--help -h --interactive --no-interactive -i --explode --no-explode -E --skip-version-check --api-endpoint -e --pro --org --staging --token -t --debug --adapter";;
    esac
    COMPREPLY=( $(compgen -W "$options" -- "${COMP_WORDS[COMP_CWORD]}") )
  }
fi
